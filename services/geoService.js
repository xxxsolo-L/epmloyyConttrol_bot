// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π –º–æ–¥–µ–ª—å geoData (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–æ Mongoose –∏–ª–∏ –¥—Ä—É–≥–∞—è ORM-–º–æ–¥–µ–ª—å)
const geoData = require('../controllers/geoData.model'); // –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –º–æ–¥–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
async function saveGeoPoint(ctx, location) {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        if (location) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç geoPoint
            let geoPoint = new geoData({
                user_id: ctx.from.id,
                username: ctx.from.username,
                latitude: location.latitude,
                longitude: location.longitude,
                timestamp: new Date()
            });

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–µ–æ-—Ç–æ—á–∫—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            await geoPoint.save();

            // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ !undefined –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø–æ—Å–ª–µ await save)
            await ctx.reply('–ú–µ—Ç–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ üê™');

            // –û–±–Ω—É–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é geoPoint, –µ—Å–ª–∏ —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ª–æ–≥–∏–∫–∏
            geoPoint = undefined;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –º–µ—Ç–∫–∏.');
    }
}
module.exports = {
    saveGeoPoint,
};